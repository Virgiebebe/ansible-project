---
- name: Deploy Docker Compose apps and Jenkins
  hosts: all
  become: yes

  vars:
    base_path: "/home/ubuntu"   # Adjust to where your app folders are
    app_folders:
      - nexus
      - vault
      - jenkins
    jenkins_image: "jenkins/jenkins:2.501-alpine-jdk21"
    jenkins_port: 8080

  tasks:

    # ---- Deploy multiple Docker Compose apps ----
    - name: Check if app folders exist
      stat:
        path: "{{ base_path }}/{{ item }}"
      loop: "{{ app_folders }}"
      loop_control:
        label: "{{ item }}"
      register: folder_check

    - name: Run docker-compose up -d in each app folder
      command: docker-compose up -d
      args:
        chdir: "{{ base_path }}/{{ item }}"
      when: folder_check.results[loop.index0].stat.exists
      loop: "{{ app_folders }}"
      loop_control:
        label: "{{ item }}"

    - name: Warn if any folders were missing
      debug:
        msg: "Folder '{{ item.item }}' does not exist. Skipping."
      when: not item.stat.exists
      loop: "{{ folder_check.results }}"
      loop_control:
        label: "{{ item.item }}"

    # ---- Jenkins setup ----
    - name: Ensure Jenkins container is running
      docker_container:
        name: jenkins
        state: started
        restart_policy: unless-stopped
        image: "{{ jenkins_image }}"
        exposed_ports:
          - "8080"
          - "50000"
        published_ports:
          - "{{ jenkins_port }}:8080"
        # Optional: add volumes here if you want data persistence
        # volumes:
        #   - jenkins_home:/var/jenkins_home

    - name: Wait for Jenkins to be up and running
      uri:
        url: "http://localhost:{{ jenkins_port }}/login"
        status_code: 200
        validate_certs: no
      register: result
      retries: 10
      delay: 15
      until: result.status == 200

    - name: Display Jenkins is ready
      debug:
        msg: "Jenkins is up. Proceed with admin setup, CLI config, or plugin automation"

    - name: Get initial admin password
      slurp:
        src: /var/jenkins_home/secrets/initialAdminPassword
      register: admin_pass

    - name: Show Jenkins initial admin password
      debug:
        msg: "Initial Admin Password: {{ admin_pass['content'] | b64decode }}"

    - name: Copy plugins list
      copy:
        src: plugins.txt
        dest: /tmp/plugins.txt

    - name: Install plugins via Jenkins CLI
      shell: |
        JENKINS_CLI=jenkins-cli.jar
        curl -o $JENKINS_CLI http://localhost:{{ jenkins_port }}/jnlpJars/jenkins-cli.jar
        java -jar $JENKINS_CLI -s http://localhost:{{ jenkins_port }} install-plugin $(cat /tmp/plugins.txt) --restart
      args:
        chdir: /tmp
